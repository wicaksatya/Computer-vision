import cv2
import numpy as np

#Input an image
img = cv2.imread('D:/KP/C003/49C1Y07BB3/0001B.TIFF', cv2.IMREAD_COLOR)

#Resize image
scale_percent = 20 # percent of original size
width = int(img.shape[1] * scale_percent / 100)
height = int(img.shape[0] * scale_percent / 100)
dim = (width, height)
resized = cv2.resize(img, dim, interpolation = cv2.INTER_AREA)

#Change colorspaces and apply the segmentation
cimg = cv2.cvtColor(resized,cv2.COLOR_BGR2GRAY)
ret,thresh = cv2.threshold(cimg,20,255,cv2.THRESH_BINARY_INV)

#Give averaging filter to image
filter = cv2.blur(thresh,(3,3))

#Apply Morphology transformation
kernel = np.ones((8,8),np.uint8)
opening= cv2.morphologyEx(filter, cv2.MORPH_OPEN, kernel)

#Detect edge image
edge_detected_image = cv2.Canny(opening, 100, 200)

#Detect circle using Hough transformation
circles = cv2.HoughCircles(edge_detected_image,cv2.HOUGH_GRADIENT,1,20,
                            param1=50,param2=30,minRadius=0,maxRadius=0)

if circles is not None:
    circles = np.uint16(np.around(circles))
    for i in circles[0,:]:
        print("i: %d  j: %d  R:  %d"%(i[0],i[1],i[2]))
        # draw the outer circle
        cv2.circle(opening,(i[0],i[1]),i[2],(0,255,0),2)
        # draw the center of the circle
        cv2.circle(opening,(i[0],i[1]),2,(0,0,255),2)

#Showing an output image
cv2.imshow('Result',opening)
cv2.waitKey(0)
